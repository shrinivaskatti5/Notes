Class -1 
touch <filename> - Used to create file.
mkdir <dirname>- It is used create directories.
ls - It is used list files and directories.
ls -l - It is used to list files and directories in long format
ls -lt - It is used to list files and directories in long format with time.
ls -lrt - It is reverse of ls -lt.
ls -a - It is used to list hidden files
ls -al - It is used to list hidden files in long format.
cd (Change directory) <dierctoryname> : It is used to get into the directory.
cd .. - It is used to come out of the directory one level.
cd ../.. - It is used to come out of the directory two level.
cd dir1/dir2 - It is used to move two level forward.
pwd - It is used to check current location where you are working.
vi <filename> : It is used to open the file in editor mode.
esc i - It is used to get into the edit mode.
esc :wq! - It is used to save and quit the file.
esc :q! - It is used to quit the file without saving.
cat <filename> : It is used to display the content of file on the console.
esc : set number - It is used to set line number to the file.
esc : set nonu - It is used remove the line number.

Class - 2
rm <filename> - It is used to delete the file.
rm -rf <dirname> - It is used to delete the directory
  r - recursively f - forcefully
cp(copy) - It is used to copy the content from source file to the destination file.
If destination file doesn't exists it will create new file and copies the content.
If destination file exists then it will override the content of file.
  syn : cp <source file> <destination file>
  syn : cp -r <sourcedir> <dest dir>
mv (move) - It is used to move the data from one file to the another file, here source file will get deleted and move the content to the
            destination.
   syn : mv <source file> <destination file>
Note : mv is also used to rename a file
wc(word count) : It is used to count the no. of lines, words and characters present the file.
  syn : wc <filename>
wc -l <filename> : It is used to count the no. of lines in the file.
wc -w <filename> : It is used to count the no. of words in the file.
wc -c <filename> : It is used to count the no. of characters in the file.

Class -3
echo : Used to print any statement 
syn : echo "message"
Replace a string - used to replace a string
esc :%s/str1/str2/g
s - substitute
g - globally - used to replace a string everywhere in the file
1. esc : 1 s/str1/str2/g - used to replace str1 to str2 everywhere in the line.
2. esc : 1,3 s/str1/str2/g - used to change string from 1st to 3rd line
3. esc : 1 s/str1/str2/1 - used to change str1 to str2 from 1st line & 1st occurence only
4. esc :/string - It will move to 1st occurence and you keep pressing  "n" to 2nd occurence and so on..
5. esc dd : delete the whole line in the file	
6. esc : 3,$ s/str1/str2/g - used to change str1 to str2 from 3rd line to end of the line
du -sh : Used to fine disk usage of file
syn : du -sh
du -sh * : used to find disk usage of particular file
df -h : used to check the size of a drive
syn : df -h (disk free)
There are 3 types of shells available
1. bashrc
2. kshell
3. cshell

Task : 
1. How to show the current shell?
2. How to change shell?

Class - 4

Ridirect (>) command : It is uses to write the o/p of one command to a destination file.
If destinationfile exists It will override the content, if destinationfile doesn't exists it will ceate new file and redirect the o/p
for eg : echo "stmt" > destinationfile
Append (>>) : It is uses to write the o/p of one command to a destination file.
If destinationfile exists It will not overide the content, instend it will just append the o/p to the end of a file.
for eg : echo "stmt" >> detinationfile

Pipe command (|): Pipe command is used to give o/p of one command as input to other command.
For eg : cat f1 | wc -l

Head and Tail command 
Head - Used to display the first part of a file, by default it will display first 10 lines in a file.
syn : head filename
Tail - used to display the last part of the file, by default it will display last 10 lines in a file.
syn : tail filename
For eg :
1. head -15 filename : Used to display first 15 lines in a file.
2. tail -2 filename : Used to display last 2 lines in a file.
3. head -5 filename | tail -1 - used to display 5th line of a file.
4. head -5 filename | tail -3 - used to display 3 to 5th line in a file.
Assignment : How to print last 2nd line in a file.

d - directory
- : file
l - link

chmod(change mode) : It is used to change the permissions for files and directories.
Her we have 3 categories
users
group
others
And we have 3 types of permissions
r - read - 4
w - write - 2
x - execute - 1
For ex : If you want to give all the permissions to user, group and others for particular file/dir
   chmod 777 <filename>
   chmod -R 777 <dirname>
Note : Can you  add or remove the permissions for user or group or others without using binary format ?
       - yes
	   for ex : chmod u+x,g+x,o-x
	            chmod u+rw,g+wx,o-wx
				chmod a+rwx
		
Assignment 1 : How do you print last 2nd line in a file?
           2 : How to delete latest modified file.

Class - 5

useradd <username> : It is used to add user.
userdel <username> : It is used to delete the user.
groupadd <grpname> : It is used to add group.
groupdel <groupname> : It is used to delete the group.
		   
Note: to perform below operations we need to have root previledges
To become root we need to use sudo 
		   
chown - used to change ownership of a files and directories
for eg : sudo chown newownername filenme
for eg : sudo chown -R newownername directoryname

chgrp - used to change groupname for files and directories
for eg : sudo chgrp newgroupname filename
for eg : sudo chgrp -R newgroupname directoryname

https://www.youtube.com/watch?v=L1yquC55Y-A

Grep command : used to search pattern/string in a file.
syn : grep "pattern" filename - case sensitive
      grep -i "pattern" filename - case insensitive
There are many options used with grep command 
syn : grep [options] pattern filename
for eg : 
1. grep -l "pattern" * - Used to display filenames in which pattern is present.
2. grep -h "pattern" * - Used to display the matched lines, but do not display the filenames.      
3. grep -n "pattern" * - Used to display the matched lines and their line numbers.
4. grep -c "pattern" * - Used to count the number of lines that matches a pattern.
5. grep -v "pattern" * - Used to print all the lines except pattern.
6. grep "s$" * - used to print all the lines that ends with given pattern letter.
7. grep "^I" * - used to print all the lines that starts with given pattern letter.
8. grep -e "pattern1" -e "pattern2" * - Used to search multiple patterns.

Class - 6

sed command : Sed command is used to replace a string in a file without opening it.
syn : sed 's/p1/p2/g' filename
For eg :
1. sed '1 s/pattern1/pattern2/g' filename - Used to change the pattern in 1 st line without opening file.
2. sed '3,5 s/pattern1/pattern2/g' filename - Used to change the pattern from 3 to 5th line only in the o/p.
3. sed '5,$ s/pattern1/pattern2/g' filename - Used to change the pattern from 5th line to end of the line.
4. sed -i 's/pattern1/pattern2/g' filename - Used to change the pattern/string in the original file without opening it.
5. sed -n '5p' filename - Used to print 5 th line a file.
6. sed -n '4,99p' filename - Used to print from 4th to 10th line.
7. sed -n '5,$p' filename - Used to print from 5th line to end of file. 
8. sed '5d' filename - Used to delete 5th line in a file.
9. sed -i '5d' filename -- Used to delete 5th line in original file.
Note : if you need to change the original file then use -i= insert to a file / modify to a file.
Note : if you dont use -i it wont affect the original file it will just print the changed output

Awk command : Used to cut the content of file column wise.
For eg :
1. awk -F " " '{print $1}' filename - used to cut 1st column of a file
2. awk -F " " '{print $2,$3}' filename - used to cut 2nd and 3rd column.
3. awk -F " " '{print $NF}' filename - used to cut last column of a file.
4. awk -F " " '{print $NF, $(NF-1)}' filename - used to cut last 2 columns of a file.
5. awk -F " " '{print $(NF-1)}' filename - used to cut last 2nd column of a file.

uname - used to check the os
uname -a -> used to check all the info about linux
who/whoami - used to check how many users logged into system
ps/ps -ef -> used to list all the processes which are running in the system
ps -ef | grep "process name" - used to check particular process is running or not.
kill -9 processid - used to kill the paricular process forcefully
ps -u "username" - It will show all the process sheet running by a paricular user.

Class -7


Links 
There are 2 types of links
1. soft link/ symbolic link
2. Hard link
Soft link : It is a shortcut to file, if any modifications done to a actual file it will get reflected in original file.
and if we delete original file then soft link will not work.
syn : ln -s filename(fullpath) linkname
Hard link :It is a shortcut to file, if any modifications done to a actual file it will get reflected in original file.
and if we delete original file then hard link will work because it points to a inode of a file.
where inode is a unique identification number which indicates memory address of a file.
syn : ln filename(fullpath) linkname

find command : It is used to find the location of files and directories.
syn : find . -name "filename"
     . -> indicates current path
	 i -> case insensitive
For eg : 
1. find . -name "*.txt" - It is used to find .txt file locations
2. find . -type f "filename" - It is used to find only file locations
3. find . -type d "directory" - It is used to find only directory locations
4. find . -type f -empty - It is used to find empty files
5. find . -type d -empty - It is used to find empty directories
6. find . -empty - It is used to find both empty files and directories
7. find . -type f -mtime +60 - It is used to find files that are modified 60 days ago
8. find . -type f -mtime -30 - It is used to find files that are modified within 30 days.
9. find . -type f -mmin -15 - It is used to list the files which are modified within last 15 mins.
10. find . -type f -perm 0644 - It is used to find files that has 0644 permission or user with read and write, group with read and others with read permission.
11. find . -type f ! -empty - It is used to list non-empty files
12. find . -type f -size +1k - It is used to find files which are more than 1KB

Assignment : Explore Bashrc and Bash-profile




